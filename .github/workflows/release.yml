# See https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow
# If there are permission problems, may have to give token access to repo stuff:
# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions

name: Release

on:
  push:
    branches: [ master]

env:
  CARGO_TERM_COLOR: always

jobs:
  # test:
  #   name: Test DWorld for ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       include:
  #         - os: ubuntu-latest
  #           artifact_name: dworld
  #           asset_name: dworld-linux
  #         - os: windows-latest
  #           artifact_name: dworld.exe
  #           asset_name: dworld-windows.exe
  #         - os: macos-latest
  #           artifact_name: dworld_rust
  #           asset_name: dworld-macos

  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: dtolnay/rust-toolchain@stable
  #   - name: Install alsa and libudev
  #     run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
  #     if: runner.os == 'linux'
  #   - name: Build
  #     run: cargo build --verbose
  #   - name: Test
  #     run: cargo test --verbose

  publish:
    # needs: test
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: trader
            asset_name: trader-linux
          - os: windows-latest
            artifact_name: trader.exe
            asset_name: trader-windows.exe
          - os: macos-latest
            artifact_name: trader
            asset_name: trader-macos

    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Install alsa and libudev
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      if: runner.os == 'linux'
    - name: Build release
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
        overwrite: true
        body: "Trader releases for Windows, Linux and MacOS.
          Note that for the game to run, you must download and unzip the assets folder, and place it in
          the a folder next to the game executable"

