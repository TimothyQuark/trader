# Workflow for building the game for various platforms, as well as zipping assets into a folder and adding to the release page

# See https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow
# If there are permission problems, may have to give token access to repo stuff (or enable them for the workflow manually):
# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions

name: Release

on:
  push:
    branches: [ master, v** ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # test:
  #   name: Test DWorld for ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       include:
  #         - os: ubuntu-latest
  #           artifact_name: dworld
  #           asset_name: dworld-linux
  #         - os: windows-latest
  #           artifact_name: dworld.exe
  #           asset_name: dworld-windows.exe
  #         - os: macos-latest
  #           artifact_name: dworld_rust
  #           asset_name: dworld-macos

  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: dtolnay/rust-toolchain@stable
  #   - name: Install alsa and libudev
  #     run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
  #     if: runner.os == 'linux'
  #   - name: Build
  #     run: cargo build --verbose
  #   - name: Test
  #     run: cargo test --verbose

  # zip_assets:
  #   name: Zip and upload Trader assets folder
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout branch
  #     uses: actions/checkout@v3
  #   - name: Zip assets folder
  #     uses: thedoctor0/zip-release@0.7.1
  #     with:
  #       type: 'zip'
  #       filename: 'assets.zip'
  #       path: 'assets/'
  #   - name: Upload assets ZIP file
  #     uses: ncipollo/release-action@v1.12.0
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       tag: ${{ github.ref_name }}
  #       artifacts: "assets.zip"
  #       name: 'Assets_ZIP'
  #       replacesArtifacts: true
  #       allowUpdates: true

  zip_assets:
    name: Zip and upload Trader assets folder
    runs-on: ubuntu-latest
    steps:
    - name: Checkout branch
      uses: actions/checkout@v3
    - name: Zip assets folder
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        filename: 'assets.zip'
        path: 'assets/*'
    - name: Upload assets ZIP file to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: assets.zip
        asset_name: assets.zip
        tag: ${{ github.ref  }} # Strips refs/heads/ from this string automatically
        overwrite: true

  publish:
    # needs: test
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: trader
            asset_name: trader-linux
          - os: windows-latest
            artifact_name: trader.exe
            asset_name: trader-windows.exe
          - os: macos-latest
            artifact_name: trader
            asset_name: trader-macos

    steps:
    - name: Checkout branch
      uses: actions/checkout@v3
    - name: Use Stable rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Install alsa and libudev
      run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      if: runner.os == 'linux'
    - name: Build release
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref  }} # Strips refs/heads/ from this string automatically
        overwrite: true
        body: "Trader releases for Windows, Linux and MacOS.
          Note that to run the game, you must unzip the assets folder, and place it next to the game executable."

